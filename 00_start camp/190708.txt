1저장 = 
2조건
3반복

//시작하기전에 명심할 것
1 대/소문자
2 띄어쓰기 및 들여쓰기(indent)
3 스펠링

//저장
무엇을 어떻게 저장할 수 있는가?
= 는 ~에 저장한다 
== ~는 ~와 같다

-컴퓨터가 저장할 수 있는 것은
1 숫자
2 글자
"" 로 둘러싸여져 있는 글자나 숫자/ 글자는 따옴표를 붙여야한다! 반드시!
3 참거짓
0 또는 1 
조건, 반복에서 사용된다. 

//박스의 종류

<변수1개> 
변수=박스
박스에는 한번에 마지막에 등장하는 값이 무조건 등장한다. 마지막것만 인식이 되어 저장된다. 

print("안녕") print(안녕) 다르다!!!!!! 


<리스트 list-박스여러개>

dusts = [58, 40, 70]
print(dusts[1])
40
리스트에는 0번부터 숫자가 시작한다!!!!! 
인덱스0, 인덱스1, 인덱스 2

<딕셔너리-견출지 붙인 박스>
dusts={"영등포구":58, "서초구":40, ...}      >> 키-강남구, 밸류-58
print(dust["영등포구"])   >>꺼낼때는 무조건 대괄호[ ] 이다. 
58

*문자를 쓸 때 '', "" 상관없는데, ''가 더 간편하다 ㅎㅎㅎ
*단수 =[ ]
복수s =[ ] >>리스트를 작성할때 무조건 복수형을 쓰세요!!!!!!!! 특히 단어를 상징하는 것으로 해야한다!!!!!! 
*알고리즘은 리스트 다루는 문제이다


<조건>
dust = 60
if dust>50:
    print("50초과")
else:
    print("50이하")  >>4칸띄어쓰기!!!!!!! 
50초과

elif (그건 아니지만)

if 와 elif 의 간격은 같아야 동일한 조건이다~~~

if 뒤에 : 가 있어야 들여쓰기가 다음에 자동으로 된다!

EX.
if dust > 150:
    print('매우나쁨')
elif dust > 80:
  print('나쁨')
elif dust > 50:
    print('보통')
elif dust > 30:		
    print('좋음')
else:
    print('매우좋음')


<반복>

while True:
    print('계속해주세요.')  >>while은 조건이 참이면 계쏙해서 돌린다.. 그래서 터진다.... 

EX.
n = 0
While n < 3:
    print('출력')
    n = n+1
0,1

*이상, 이하 가 코드에서 잘 등장한다. >=, <= 이런것은 잘 안쓸 것이다. 

//
for i in List:
    print('정해진 범위내에서 계속')

>>정해진 여러개의 박스중에 그 안에서 반복하고 이 반복은 반드시 처음붜 시작해서 끝에서 끝낸다. / 본 과정에서 for 를 가장많이 쓸것이다. /무조건 처음부터!!! 순서대로 돈다. 

dust = [59, 24, 102]
for i in dust:   >> i 에는 뭘 써도 상광없다. 대신 아래 프린트에 꼭 나와야한다. 
    print(i)
59 24 102

* While True: 조건이 트루일때까지 반복적으로 실행되기에 종료조건이 반드시 필요
VS
for i in dust: 정해진 범위를 반복하기에 종료조건이 필요없음. 

EX. 
greeting = '안녕'

n = 0		>> 박스안에 넣는 것이 있어야한다~~ n을 정의를 해야한다~~
while n < 5:
  print(greeting)
  n = n+1	>> 하나씩 증가시키기 위해서 넣은 것이다. 

안녕
안녕
안녕
안녕
안녕

EX.		*띄어쓰기에 민감한 언어이다!
greeting = '안녕'

for n in [0,0,0,0,0]:		>>5개의 개수가 중요한 것이다. 각 회차 5번 돈다느 것이 포인트이다. 
    print(greeting)

EX.
greeting = '안녕'

for n in range(5):		
    print(greeting)

-------------------------------------------------------

API: 다른 시스템 간의 커뮤니케이션 방식 
인터페이스: 접점.... 
UI: 사용자의 인터페이서 


* 웹에서의 커뮤니케이션 방식: 요청과 응답 
>> 요청이 없으면 응답을 하지 않는다. 완전 당연하게 중요한 이야기. 
-----------------------------------------------------------

*괄호가 붙으면 함수입니다!!!


<외장함수>: 서랍만 열면 사용할 수 있다. 	
* #을 달고 하면 코드를 읽지 못한다. (주석)>>문제를 풀때마다 주석을 다는 것이 중요하다. 

1
random.choice(리스트)

2
random.sample(리스트, 개수) :  비복원추출/ 로또 


EX.
# 서랍에서 꺼낸다
import random

>> 외장함수(함수==괄호가 있으며 함수다)(서랍안에 있는 함수) import : random
내장함수(책상위에 있는 함수): print, range, 

#공 바구니 numbers 를 만든다 1~45
numbers = range(1,46)  >> 1<= ? < 46	또는 list(range(1,46)) >> 리스트화하겠다! 박스들의 나열로 하기 위해서는 리스트가 필요하다. 그러나 아래에 구간 처리가 있는데 .... 

cf.
n = 1
numbers = [ ] 
while n < 45:
    n = n + 1
    numbers.append(n) 

또는

numbers = [ ] 
for i in range(45):
    nimbers.append(i+1)

#랜덤하게 공 바구니에서 6개를 뽑아서  lucky_numbers 에 저장한다. 
lucky_numbers = random.sample(numbers, 6)  >>범위가 들어가면 랜덤샘플은 정수만을 뽑게 되어있다. 

#lucky_numbers 를 출력한다. 
print(lucky_numbers)

[20, 3, 45, 8, 18, 9]	 	>>랜덤하게 추출된다. 




































